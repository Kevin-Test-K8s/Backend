name: Deploy to AKS

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Select Image version to deploy (e.g. 1.0.5):'
        required: false

jobs:
  Deploy-to-AKS:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set image version
        id: set-version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "No version provided, checking latest..."
            VERSION=$(gh api -H "Accept: application/vnd.github.v3+json" \
              /orgs/Kevin-Test-K8s/packages/container/backend/versions \
              | jq -r '.[].metadata.container.tags[]' | grep -E '^[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          else
            VERSION="${{ github.event.inputs.version }}"
          fi

          echo "Using version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubectl
        run: |
          az aks get-credentials --resource-group k8s-terraform --name k8s-terraform-cluster
          kubectl get nodes

      - name: Render deployment.yaml with selected version
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          envsubst < k8s/deployment.yaml > k8s/deployment.rendered.yaml
          cat k8s/deployment.rendered.yaml

      - name: Apply Kubernetes Deployment
        run: |
          kubectl apply -f k8s/deployment.rendered.yaml
          kubectl rollout status deployment/backend -n default

      - name: Verify Deployment
        run: |
          echo "Verifying Pods Status..."
          kubectl get pods -n default
          echo "Verifying Logs..."
          kubectl logs -l app=backend -n default || true
